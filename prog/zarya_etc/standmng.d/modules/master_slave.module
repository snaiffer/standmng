#!/bin/bash

what_todo=$1
param1=$2
###################################

init_set()
	{
        master_ip="`standmng get Master`"
	        if [ "$master_ip" = "" ]
	        then
			echo "Error: Can't find IP address for Master. May me it isn't installed!"
			exit 1
	        fi

        slave_ip="`standmng get Slave`"
	        if [ "$slave_ip" = "" ]
	        then
			echo "Error: Can't find IP address for Slave. May me it isn't installed!"
			exit 1
	        fi

	ssh $master_ip <<-EOF
		if grep -Eq "host.*replication.*repl.*$slave_ip.*trust" /var/lib/pgsql/data/pg_hba.conf
		then
			echo "Pg_hba.conf entry already exists"
		else
			echo -e "host    replication     repl            $slave_ip/32           trust" >> /var/lib/pgsql/data/pg_hba.conf 
		fi
		
		if grep -Fxq "#replication_conf" /var/lib/pgsql/data/postgresql.conf
		then
			echo "Postgresql.conf replication already configured"
		else
			echo -e "#replication_conf\nwal_level = hot_standby\nmax_wal_senders = 2\nwal_keep_segments = 32" >> /var/lib/pgsql/data/postgresql.conf
		fi
		
		service postgresql restart
		
		psql -w -h 127.0.0.1  -d postgres -U sepgsql -c "SELECT pg_start_backup('base_bkp',true)"
		
		cd /var/lib/pgsql/data/;
		tar cjf /var/lib/pgsql/pgsql.tar.bz2 --exclude='pg_xlog/*' --exclude='postmaster*' ./*
		scp /var/lib/pgsql/pgsql.tar.bz2 $slave_ip:/var/lib/pgsql/pgsql.tar.bz2
		EOF

	ssh $slave_ip <<-EOF
		cd /var/lib/pgsql
		service postgresql stop
		tar xpjf pgsql.tar.bz2 -C data
		rm data/recovery.done 2> /dev/null
		rm data/failover 2> /dev/null
		echo -e "standby_mode = 'on'\nprimary_conninfo = 'host=$master_ip port=5432 user=repl'\ntrigger_file = 'failover'" > data/recovery.conf
		echo "hot_standby = on" >> data/postgresql.conf
		exit
		EOF

	ssh $master_ip <<-EOF
		psql -w -h 127.0.0.1 -d postgres -U sepgsql -c "SELECT pg_stop_backup()"
		
		service postgresql start
		EOF

	ssh $slave_ip <<-EOF
		service postgresql restart
		EOF
	}


###################################
case $what_todo in
	install)
		echo "Installing $0..."
		init_set
		echo
		;;
	set)
		echo "Setting $0..."
		if [ "$param1" = "" ]
		then
			echo -e "Error: Input parameter isn't set!\n"
			exit 1
		fi
		echo
		;;
	unset)
		echo "Unsetting $0..."
		if [ "$param1" = "" ]
		then
			echo -e "Error: Input parameter isn't set!\n"
			exit 1
		fi
		echo
		;;
	erase)
		echo "Erasing $0..."
		echo
		;;
	*)
		echo -e "Usage: $0 { install | set <ip_addr> | unset <ip_addr> | erase }\n"
		exit 1
		;;
esac

