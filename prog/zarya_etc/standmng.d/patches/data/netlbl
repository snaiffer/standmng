#!/bin/bash

what_todo=$1
param2=$2

if [ "$zarya_bin" = "" ]
then
	echo "Error: \"\$zarya_bin\" isn't determinated!"
	exit 1
fi

if [ "$zarya_etc" = "" ]
then
	echo "Error: \"\$zarya_etc\" isn't determinated!"
	exit 1
fi

conf_file="netlbl.rules"
rules="$zarya_etc/$conf_file"

add_rule()
	{
	if [ "$param2" = "" ]
	then
		echo "Error: Input parameter isn't set!"
		exit 1
	fi
	
	ip_addr=$param2
	temp=`echo $ip_addr | sed '/\//!D'`
	if [ "$temp" = "" ]
	then
		ip_addr="$ip_addr"/32
	fi

	temp=`grep -i "netlabelctl map add default address:$ip_addr protocol:cipsov4,10" $rules` 
	if [ "$temp" = "" ]
	then
		echo "netlabelctl map add default address:$ip_addr protocol:cipsov4,10" >> $rules
	else
		echo "Error: The rule already exist!"
		exit 1
	fi
	}

start()
	{
	$rules &> /dev/null
	}

stop()
	{
	netlabelctl map del default
	netlabelctl map add default protocol:unlbl
	}

on()
	{
	start
	if [ "`grep -i \"$rules\" /etc/rc.local`" = "" ]
	then
		echo "$rules" >> /etc/rc.local
	fi
	}

off()
	{
	stop
	sed -i "/$conf_file/d" /etc/rc.local
	}

unlbl_access()
	{
	grep 'netlabelctl map add default address:0.0.0.0/0 protocol:unlbl' $rules > /dev/null
	if [ "`echo $?`" = "1" ]
	then
		echo "netlabelctl map add default address:0.0.0.0/0 protocol:unlbl" >> $rules
	fi

	grep 'netlabelctl unlbl add default address:0.0.0.0/0 label:system_u:object_r:netlabel_peer_t:s0' $rules > /dev/null
	if [ "`echo $?`" = "1" ]
	then
		echo "netlabelctl unlbl add default address:0.0.0.0/0 label:system_u:object_r:netlabel_peer_t:s0" >> $rules
	fi
	}

unlbl_deny()
	{
	sed -i "/netlabelctl map add default address:0.0.0.0\/0 protocol:unlbl/d" $rules
	sed -i "/netlabelctl unlbl add default address:0.0.0.0\/0 label:system_u:object_r:netlabel_peer_t:s0/d" $rules
	netlabelctl unlbl del default address:0.0.0.0/0 label:system_u:object_r:netlabel_peer_t:s0
	}

reset()
	{
echo "
#!/bin/bash

service netlabel start
netlabelctl map del default
netlabelctl cipsov4 add pass doi:10 tags:1
netlabelctl map add default address:0.0.0.0/0 protocol:unlbl
netlabelctl unlbl add default address:0.0.0.0/0 label:system_u:object_r:netlabel_peer_t:s0
" > $rules
	chmod 770 $rules
	}

status()
	{
	echo -e "\nNetlabel settings for"
	echo -e "=================================="
	echo -e "\tIncoming packeges:"
	netlabelctl map list -p

	echo -e "=================================="
	echo -e "\tOutcoming packeges:"
	netlabelctl cipsov4 list -p
	netlabelctl unlbl list -p
	echo -e "==================================\n"
	}


if [ ! -e $rules ]
then
	reset
fi

case $what_todo in
	add)
		add_rule
		start
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	on)
		on	
		;;
	off)
		off
		;;
	reset)
		reset
		start
		;;
	unlbl)
		case $param2 in
			access)
				unlbl_access
				start
				;;
			deny)
				unlbl_deny
				start
				;;
			*)
				echo "Usage: netlbl unlbl {access|deny}"
				exit 1		
				;;
		esac
		;;
	status | list)
		status
		;;
	help | --help | h | -h)
		echo -e "
netlbl --netlabel manager
\ton\t--turn on netlbl and it will turn on after reboot
\toff\t--turn off netlbl and it will turn off after reboot
\tstart\t--turn on simply
\tstop\t--turn off simply
\tadd <ip_addr>\t--add rule for <ip_addr>
\t\t*you can write ip address only or ip address and subnet in follow format: x.x.x.x/x (Ex.: 192.168.100.0/24)
\t\tIn the first case it will be set subnet=32
\treset\t--reset all rules
\tstatus\t--show information about current settings
\tunlbl\t
\t\taccess\t--allow access for machine without set netlabel
\t\t\t*default security label for these machines will be \"system_u:object_r:netlabel_peer_t:s0\"
\t\tdeny\t--deny access for machine without set netlabel
"
		;;
	*)
		echo "Usage: $0 { on | off | start | stop | add <ip_addr> | reset | status | unlbl { access | deny } }"
		exit 1
		;;
esac



